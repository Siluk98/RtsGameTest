[gd_resource type="ShaderMaterial" load_steps=2 format=2]

[sub_resource type="Shader" id=2]
code = "shader_type spatial;
render_mode unshaded, cull_disabled, depth_draw_opaque;

uniform float size;
uniform float width;
uniform float widthMax;
uniform vec4 inner_color: hint_color;
uniform vec4 outer_color: hint_color;

void fragment() {
	ALPHA = 0.0;
	vec2 center = vec2(0.5);
	float d = distance(UV, center);
	float h = size * 0.5;
	float l = h - (width * 0.5);
	if (d <= h && d > l) {
		vec4 color = mix(inner_color, outer_color, smoothstep(l, h, d));
		ALPHA = color.a;
		ALBEDO = color.rgb;
		
		if (d > widthMax * 0.5)
			ALPHA = 0.0
	}		
}"

[resource]
shader = SubResource( 2 )
shader_param/size = 0.5
shader_param/width = 0.1
shader_param/widthMax = 0.4
shader_param/inner_color = Color( 0.0941176, 0.807843, 0.882353, 0 )
shader_param/outer_color = Color( 0.196078, 0.705882, 0.12549, 1 )
